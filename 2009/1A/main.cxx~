#include <fstream>
#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <limits>
#include <map>
#include <set>
#include <sstream>

#include <stdio.h>
#include <time.h>
#include <assert.h>
#include <stdlib.h>

#include "util.h"
#include <cstring>

using namespace std;


void do_test_case(int, ifstream& input);

int main(int argc, char** args)
{
    
    LOG_OFF();
    
  if (argc < 2) {
    cerr << "Usage: <exe> input_file" << endl;
    return -1;
  }
  
  ifstream input;
  input.open(args[1]);
  
  int T;
  input >> T;

  string dummy;
  getline(input, dummy);
  SHOW_TIME_BEGIN(g) 
  	
  for (int test_case = 0; test_case < T; ++test_case) {
    do_test_case(test_case, input);   
  }
      
  SHOW_TIME_END(g)
}

typedef pair<int, int> IntPair;

deque<int> baseConv(int k, base b) {
	deque<int> conNum;

	int k = K;

	do {
		conNum.push_front(k % base);
		k /= base;
	}
	while (k != 0);

	return conNum;
}

int getSq(const deque<int>& convNum) {s

void do_test_case(const int test_case, ifstream& input)
{
    //LOG_ON();
    string text;
    getline(input, text);

    stringstream iStr(text);

    vector<int> bases;

    while(!iStr) {
	int b;
	iStr >> b;
	bases.push_back(b);
    }
   
    //cout << text << endl;

    int K = 2;

    while(true) {
	for(vector<int>::const_iterator it = bases.begin();
		it != bases.end();
		++it) {
		int base = *it;
		LOG(base);

		deque<int> conNum = baseConv(K, base);
		LOG(conNum);

		

		
	}		

    }
        
    cout << "Case #" << (1+test_case) << ": " << setfill('0')  << endl;
}
  
